{"version":3,"sources":["components/cards/Cards.module.css","components/cards/Cards.js","api/index.js","components/chart/Charts.js","components/countrypicker/Countrypickers.js","App.js","index.js","App.module.css","components/chart/Chart.module.css","components/countrypicker/Countrypicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","Grid","container","spacing","justify","item","component","Card","xs","md","className","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeurl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countrypicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","coronamage","Countrypickers","Charts","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.075cc041.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Cards_card__1N7pj\",\"infected\":\"Cards_infected__wcxcq\",\"recovered\":\"Cards_recovered__3R3u8\",\"deaths\":\"Cards_deaths__2xaEy\"};","import React from 'react'\nimport {Card , CardContent , Typography , Grid} from '@material-ui/core'\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\n\nconst Cards = ({data : {confirmed , recovered , deaths , lastUpdate}}) =>\n{\n    if(!confirmed)\n    {\n        return 'Loading..'\n    }\n    console.log('hello');\n    console.log(confirmed);\n    \n    return (\n        <Grid container spacing={3} justify=\"center\" >\n\n        <Grid item component={Card} xs = {12} md = {3} className = {cx(styles.card , styles.infected)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n            <Typography variant=\"h5\">\n                <CountUp start= {0} end = {confirmed.value} duration = {2.5} separator = \",\" />\n             </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">no of active cases of covid19</Typography>\n        </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs = {12} md = {3} className = {cx(styles.card , styles.recovered)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n            <Typography variant=\"h5\">\n                <CountUp start= {0} end = {recovered.value} duration = {2.5} separator = \",\" />\n             </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">no of recovered cases of covid19</Typography>\n        </CardContent>\n        </Grid>\n\n\n        <Grid item component={Card} xs = {12} md = {3} className = {cx(styles.card , styles.deaths)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n            <Typography variant=\"h5\">\n                <CountUp start= {0} end = {deaths.value} duration = {2.5} separator = \",\" />\n             </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">no of death cases of covid19</Typography>\n        </CardContent>\n        </Grid>\n\n\n        </Grid>\n    )\n}\n\n\nexport default Cards","import axios from 'axios'\n\n\nconst url = 'https://covid19.mathdro.id/api' \n\n\n\nexport const fetchData = async (country) =>\n{\n    let changeurl = url ;\n\n    if(country)\n    {\n        changeurl = `${url}/countries/${country}`\n    }\n    \n    try\n    {\n        \n        const {data :{confirmed , recovered , deaths , lastUpdate}} = await axios.get(changeurl);\n        \n        \n        \n       \n        \n        return {confirmed , recovered , deaths , lastUpdate};\n\n    }\n    catch(e)\n    {\n        console.log(e)\n    }\n}\n\n\nexport const fetchDailyData = async () =>\n{\n    try{\n\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) =>\n        ({\n            confirmed : dailyData.confirmed.total ,\n            deaths : dailyData.deaths.total ,\n            date : dailyData.reportDate\n        }));\n        console.log(data);\n\n        return modifiedData;\n    }\n    catch(e)\n    {\n        console.log(e);\n    }\n}\n\n\nexport const fetchCountries  = async () =>\n{\n    try{\n\n        const {data : {countries}}  = await axios.get(`${url}/countries`)\n\n        return countries.map((country) => country.name)\n    }\n    catch(e)\n    {\n        console.log(e);\n    }\n}","import React , { useState , useEffect}from 'react'\nimport {fetchDailyData} from './../../api/index'\nimport {Line , Bar} from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nconst Chart = ({data : {confirmed , recovered , deaths}, country}) =>\n{\n    const [dailyData , setDailyData] = useState([]);\n\n    useEffect(() =>\n    {\n\n        const fetchAPI = async () =>\n        {\n            setDailyData(await fetchDailyData());\n        }\n        console.log(dailyData);\n        fetchAPI();\n    },[]);\n\n\n    const lineChart = ( dailyData.length ? \n       ( <Line data = {{\n            labels : dailyData.map(({date}) =>date) ,\n            datasets : [{\n                data : dailyData.map(({confirmed}) =>confirmed) ,\n                label : 'Infected' ,\n                borderColor : '#3333ff' ,\n                fill : true\n            } , {\n                data : dailyData.map(({deaths}) =>deaths) ,\n                label : 'Deaths' ,\n                borderColor : 'red' ,\n                backgroundColor : 'rgba(255,0,0,0.5)',\n                fill : true\n            }] ,\n        }}/>) : null\n    );\n\n\n    const barChart = (\n        confirmed ? (\n            <Bar \n                data = {{\n                    labels : ['Infected' , 'Recovered' , 'Deaths'] , \n                    datasets : [{\n                        label : 'people' ,\n                        backgroundColor : ['rgba(0,0,255,0.5)' , 'rgba(0,255,0,0.5' , 'rgba(255,0,0,0.5'],\n                        data : [confirmed.value , recovered.value , deaths.value]\n                    }]\n                    \n                }}\n                options = {{\n\n                    legend : {display : false} ,\n                    title : { display : true ,  text : `Current state in ${country}`}\n                }}\n            /> \n        ): null\n    );\n    return (\n        <div className={styles.container}>\n        {\n            country ? barChart : lineChart\n        }\n        </div>\n    )\n}\n\n\nexport default Chart","import React , {useState , useEffect} from 'react'\nimport {NativeSelect , FormControl} from '@material-ui/core'\nimport styles from './Countrypicker.module.css'\nimport {fetchCountries} from './../../api/index'\n\nconst Countrypicker = ({handleCountryChange}) =>\n{\n    const [fetchedCountries , setfetchedCountries] = useState([]);\n    useEffect( () =>\n    {\n        const fetchAPI = async () =>\n        {\n            setfetchedCountries(await fetchCountries() );\n        }\n\n        fetchAPI();\n    },[setfetchedCountries])\n    return (\n        \n        <FormControl className={styles.formcontrol}>\n            <NativeSelect defaultValue = \"\" onChange = {(e) =>handleCountryChange(e.target.value)}>\n            <option value=\"\">global</option>\n            {fetchedCountries.map((country,i) => <option key={i} value = {country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\n\nexport default Countrypicker","import React from 'react'\nimport Cards from './components/cards/Cards'\nimport Charts from './components/chart/Charts'\nimport Countrypickers from './components/countrypicker/Countrypickers'\nimport styles from './App.module.css'\nimport {fetchData} from './api/index'\nimport coronamage from './images/image.png'\n\nclass App extends React.Component\n{\n\n  state = {\n\n    data : {\n\n    },\n\n    country : '' ,\n  }\n\n\n  handleCountryChange = async (country) =>\n  {\n    console.log(country);\n    //fetch the data\n    //set the state\n\n    const fetchedData = await fetchData(country);\n    this.setState({data : fetchedData , country : country});\n\n\n  }\n  async componentDidMount()\n  {\n    const fetchedData = await fetchData()\n    \n    console.log(fetchedData)\n    this.setState({data : fetchedData})\n  }\n\n\n  render()\n  {\n\n    const {data} = this.state;\n    const {country} = this.state;\n\n    return(\n      <div className={styles.container}>\n          <img className={styles.image} alt=\"COVID-19\" src={coronamage} />\n          <Cards data = {data}/>\n          <Countrypickers handleCountryChange = {this.handleCountryChange} />\n          <Charts data = {data} country = {country}/>\n      </div>\n   \n    )\n  }\n}\n\n\nexport default App","\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render( <App /> , document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Qe1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"Countrypicker_formcontrol__4O7Sb\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}